{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","firstTodos","userId","usersFromServer","find","u","App","useState","isSubmitTitleError","setIsSubmitTitleError","isSubmitUserError","setIsSubmitUserError","setTodos","titleInput","setTitleInput","selectedUser","setSelectedUser","action","method","onSubmit","event","preventDefault","trim","newUser","Number","newTodo","Math","max","type","placeholder","value","onChange","target","String","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0baa8181.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\n\nexport interface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n}\n\ninterface UserInfoProps {\n  user: User | undefined;\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => {\n  if (!user) {\n    return null;\n  }\n\n  const {\n    name, username, email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`} key={username}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo, User } from '../UserInfo';\n\ninterface TodoInfoProps {\n  todo: {\n    id: number;\n    title: string;\n    completed: boolean;\n    userId: number | string;\n    user?: User;\n  };\n}\n\nconst TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const {\n    id, title, completed, user,\n  } = todo;\n\n  return (\n    <article\n      key={id}\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      <UserInfo user={user} />\n    </article>\n  );\n};\n\nexport { TodoInfo };\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { User } from '../UserInfo';\n\nexport interface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number | string;\n  user?: User;\n}\n\ninterface TodoListProps {\n  todos: Todo[];\n}\n\nconst TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n\nexport { TodoList };\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList, Todo } from './components/TodoList/TodoList';\n\nconst firstTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(u => u.id === todo.userId),\n}));\n\nexport const App = () => {\n  const [isSubmitTitleError, setIsSubmitTitleError] = useState(false);\n  const [isSubmitUserError, setIsSubmitUserError] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>(firstTodos);\n  const [titleInput, setTitleInput] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n\n  const addTodo = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const title = titleInput.trim();\n\n    if (title && selectedUser !== '') {\n      const newUser = usersFromServer.find(u => u.id === Number(selectedUser));\n\n      const newTodo = {\n        id: Math.max(...todos.map(todo => todo.id), 0) + 1,\n        title,\n        completed: false,\n        userId: Number(selectedUser),\n        user: newUser,\n      };\n\n      setTodos([...todos, newTodo]);\n      setIsSubmitTitleError(false);\n      setIsSubmitUserError(false);\n      setTitleInput('');\n      setSelectedUser('');\n    } else {\n      if (!title) {\n        setIsSubmitTitleError(true);\n      }\n\n      if (selectedUser === '') {\n        setIsSubmitUserError(true);\n      }\n    }\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleInput(event.target.value);\n    setIsSubmitTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(event.target.value);\n    setIsSubmitUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={addTodo}>\n        <div className=\"field\">\n          <div>Title:</div>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={titleInput}\n            onChange={handleTitleChange}\n          />\n\n          {isSubmitTitleError === true\n            && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <div>User:</div>\n\n          <section className=\"UserList\">\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUser}\n              onChange={handleUserChange}\n            >\n              <option value=\"0\">Choose a user</option>\n              {usersFromServer.map(user => (\n                <option\n                  key={user.username}\n                  value={String(user.id)}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n\n            {isSubmitUserError && (\n              <span className=\"error\">Please choose a user</span>)}\n          </section>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}